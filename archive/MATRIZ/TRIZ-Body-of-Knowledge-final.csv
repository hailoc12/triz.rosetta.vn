Basic TRIZ Concepts, Components, and Tools
1. Foundational concepts
    1.1. Dialectics as a philosophical foundation of TRIZ [1]
    1.2. Directional evolution of technological systems [2]
    1.3. Technological system [3].
    1.4. Functions [4].
    1.5. Ideal technological system [5].
    1.6. Substance, field, sufield [6]. Substance-field resources [7].
    1.7. Reflectivity principle [8].
    1.8. Ideal substance [9].
    1.9. Ideal final result (IFR) [10]
    1.10. Inventive situation. Inventive problem [11].
    1.11. Levels of inventions [5].
    1.12. Contradictions: administrative, engineering, and physical [12].
    1.13. System operator. Multi-screen scheme of talented thinking [13].
2. Trends (laws) and sub-trends (lines) of technological system evolution [14]
    2.1. Trend of increasing degree of ideality [14]
        2.1.1. Mechanisms of increasing the ideality of technological systems [15]
    2.2. Trend of non-uniform evolution of sub-systems [14].
    2.3. Trend of completeness of system parts [14].
        2.3.1. Sub-trend of elimination of human involvement [16].
    2.4. Trend of “energy conductivity” of systems [13].
    2.5. Trend of harmonization of rhythms [13].
        2.5.1. Sub-trends of chronokinematics [17]
    2.6. Trend of transition to super-systems [14]
        2.6.1. Sub-trend of transition from mono- to bi- and poly-systems [18]
        2.6.2. Sub-trend of increasing structurization of voids [19].
        2.6.3. Mechanisms of convolution (trimming) of technological systems. Coefficient of convolution [20]
        2.6.4. Sub-trend of deployment — convolution [21]
        2.6.5. Trimming of technological systems [22].
        2.6.6. Integration of alternative systems [22].
    2.7. Trend of increasing dynamism [23]
        2.7.1. Lines of increasing dynamism [24]
    2.8. Trend of increasing substance-field interactions [25].
        2.8.1. Lines of evolution of sufields [26]
    2.9. Trend of transition from macro- micro-levels [27].
    2.10. Trend of matching — mismatching (coordination - noncoordination) [21].
    2.11. The general pattern of engineering systems evolution [28].
3. Algorithm for Inventive Problems Solving (ARIZ)
    3.1. ARIZ — a program for inventive problem solving by identifying and resolving contradictions [29].
    3.2. Main line for solving ARIZ problems and ARIZ logic [30].
    3.3. Structure and basic notions of ARIZ-85C [31]
        3.3.1. Problems-analogs [32]
4. Substance-Field Analysis
    4.1. Basic concepts and rules [6].
    4.2. Standards for inventive problem solving [32]
    4.3. Structure of the system of standards. System of 76 standards [33].
        4.3.1. Standards for system modification [33]
        4.3.2. Standards for system measuring and detection [33]
        4.3.3. Standards for application of the standards [33]
5. Techniques for resolving contradictions
    5.1. Techniques for resolving engineering contradictions (inventive principles)
        5.1.1. 40 main inventive principles [34].
        5.1.2. 10 additional inventive principles [35].
        5.1.3. Duality “principle-anti-principle” [36].
        5.1.4. The Contradiction Matrix [37].
        5.1.5. Typical diagrams of engineering contradictions [38].
    5.2. Techniques for resolving physical contradictions
        5.2.1. Separation principles [39].
        5.2.2. Using the separation principles at macro- and micro-levels [40].
6. Scientific effects
    6.1. The concept of database of effects [41].
    6.2. Physical effects [42].
    6.3. Chemical effects [43].
    6.4. Geometrical effects [44].
7. System analysis methods
    7.1. Methods to search and formulate inventive problems [45].
    7.2. Flow analysis [45].
    7.3. Trimming (Ideal Functional Modeling) [45].
    7.4. Cause-effect Analysis. Formulation of key problems [45].
    7.5. Component-and-structural analysis [45].
    7.6. Diagnostic analysis [45].
    7.7. Evolutionary analysis [45]
    7.8. Function analysis [45].
    7.9. Integration of alternative systems [45].
    7.10. Failure-anticipation analysis [46].
    7.11. Super-effect identification (system improvement without solving problems [47].
